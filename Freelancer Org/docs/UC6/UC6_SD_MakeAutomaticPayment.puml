@startuml
autonumber

title UC6_SD_MakeAutomaticPayment

participant "payment : MakeAutomaticPaymentTask" as MAPS
participant ":Platform" as PLAT
participant "ro\n:OrganizationsRegister" as RO
participant "lOrg\n: List<Organization>" as LORG
participant "org\n: Organization" as ORG
participant "lstPay:PaymentTransactionList" as LP
participant "pay\n:PaymentTransaction" as PT
participant "task\n:Task" as TASK
participant "free\n:Freelancer" as FRL
participant "<<interface>>\nalgBank: BankTransferAlgorithm" as ALG1
participant "<<interface>>\nalgEmail: ExternalEmailSenderAlgorithm" as ALG2


[o-> MAPS : makeAutomaticPayment()
activate MAPS
MAPS -> PLAT :ro=getOrganizationsRegister()
activate PLAT
deactivate PLAT
MAPS -> RO :lOrg=getOrganizationsList()
activate RO
deactivate RO
MAPS -> PLAT : algBank=getBankTransferAlgorithm()
activate PLAT
deactivate PLAT
MAPS -> PLAT : algEmail=getExternalEmailSenderAlgorithm()
activate PLAT
deactivate PLAT
loop [ For each organization: ]
MAPS -> LORG: org=get(i)
activate LORG
deactivate LORG
MAPS-> ORG : lstPay = getPaymentsToMake()
activate ORG
deactivate ORG
MAPS -> TASK : paymentSchedule = getPaymentSchedule()
activate TASK
deactivate TASK
OPT [ paymentSchedule == true]
loop [ For each Payment ]
MAPS -> LP : pay = get(i)
activate LP
deactivate LP
MAPS -> PT : task= getTask()
activate PT
deactivate PT
MAPS -> PT : free= getFreelancer()
activate PT
deactivate PT
MAPS -> FRL: IBANF = getIBAN()
activate FRL
deactivate FRL
MAPS -> FRL: nameF= getName()
activate FRL
deactivate FRL
MAPS -> FRL: emailF= getEmail()
activate FRL
deactivate FRL
MAPS -> PT: value=getValue()
activate PT
deactivate PT
MAPS -> FRL: setOverallPayment(value)
activate FRL
deactivate FRL
MAPS -> FRL: overall= getOverallPayment()
activate FRL
deactivate FRL
MAPS -> ALG1 : sendBankTransfer(IBANF,value)
activate ALG1
deactivate ALG1
MAPS -> ALG2 : sendEmail(nameF,emailF,value,overall)
activate ALG2
deactivate ALG2

end OPT
deactivate MAPS
end loop
end loop


@enduml